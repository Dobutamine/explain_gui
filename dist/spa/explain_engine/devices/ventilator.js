class Ventilator{constructor(s){this._model=s,this.minute_volume=0,this.exhaled_tidal_volume=0,this.inspiratory_tidal_volume=0,this.etco2_ventilator=0,this.peak_pressure=0,this.peak_pressure_before_hold=0,this.plateau_pressure=0,this.compliance_static=0,this.resistance_airway=0,this.insp_resistance=0,this.volume_garanteed=!1,this.time_constant=0,this.volume=0,this.flow=0,this.pressure=0,this._insp_volume_reached=!1,this._inspiration=!1,this._expiration=!0,this._insp_pressure_reached=!1,this._exp_pressure_reached=!1,this._insp_counter=0,this._exp_counter=0,this._peak_pressure_found=!1,this._peak_pressure_temp=-100,this._exhaled_tidal_volume_counter=0,this._inspiratory_tidal_volume_counter=0,this._found_resistance=4e3,this._prev_flow=0,this._trigger_counter=0,this.triggered_breath=!1,this._temp_insp_resistance=0,this.hfo_insp_time=0,this.hfo_exp_time=0,this.hfo_timer_counter=0,this.hfo_inspiration=!0,this.hfo_expiration=!1,this.hfo_generated_pressure=0,this.hfo_current_freq=0,this.hfo_sine_factor=1,this.hfo_tidal_volume=0,this.hfo_tidal_volume_counter=0,this.test=0,this.test2=0,this.sensor_p_atm=0,this.sensor_insp_gas_pressure=0,this.sensor_exp_gas_pressure=0,this.sensor_exp_gas_flow=0,this.prev_resistance=0,this.insp_valve_resistance=1e3,this.insp_valve_resistance_stepsize=1e4,this.exp_valve_resistance=10,this.exp_valve_resistance_stepsize=100,this._trigger_counter=0,this.test1=0,this.test2=0}modelStep(){this.is_enabled&&this.modelCycle()}volumeGarantee(s){this.exhaled_tidal_volume>this.target_tidal_volume+.05*this.target_tidal_volume&&(this.pip-=.74,this.pip<this.peep+2.7&&(this.pip=this.peep+2.7)),this.exhaled_tidal_volume<this.target_tidal_volume-.05*this.target_tidal_volume&&(this.pip+=.74,this.pip>this.max_pip&&(this.pip=this.max_pip))}volumeControl(s){if(this._inspiration){if(this._inspiratory_tidal_volume_counter>=this.target_tidal_volume&&(this._insp_volume_reached=!0),this._insp_volume_reached)this._model.components["VENTIN_TUBINGIN"].r_for=1e11,this._model.components["VENTIN_TUBINGIN"].r_back=1e11,!1===this._peak_pressure_found&&(this.peak_pressure=this.pressure,this._peak_pressure_found=!0);else{let s=(this._model.components["VENTIN"].pres-this._model.components["TUBINGIN"].pres)/(this.insp_flow/60);this._model.components["VENTIN_TUBINGIN"].r_for=s,this._model.components["VENTIN_TUBINGIN"].r_back=s}this._model.components["TUBINGOUT_VENTOUT"].r_for=1e11,this._model.components["TUBINGOUT_VENTOUT"].r_back=1e11}this._expiration&&(this._model.components["VENTIN_TUBINGIN"].r_for=1e11,this._model.components["VENTIN_TUBINGIN"].r_back=1e11,this.setExpiratoryValveResistance())}setFiO2(s){let e=(.0092+.0019274)*(1-s),t=(4e-4+838e-7)*(1-s),i=.94449855*(1-s),_=s,o=_+e+t+i;i+=1-o,this._model.components["gas"].dry_air.fo2=_,this._model.components["gas"].dry_air.fargon=e,this._model.components["gas"].dry_air.fco2=t,this._model.components["gas"].dry_air.fn2=i}pressureControlWithExpirationValve(){if(this._inspiration){let s=(this._model.components["VENTIN"].pres-this.sensor_p_atm-this.sensor_insp_gas_pressure)/(this.insp_flow/60);if(this.sensor_insp_gas_pressure>this.pip){let s=this.sensor_insp_gas_pressure-this.pip;this.insp_valve_resistance+=this.insp_valve_resistance_stepsize*s}else{let e=this.pip-this.sensor_insp_gas_pressure;this.insp_valve_resistance-=this.insp_valve_resistance_stepsize*e,this.insp_valve_resistance<s&&(this.insp_valve_resistance=s)}this._model.components["VENTIN_TUBINGIN"].r_for=this.insp_valve_resistance,this._model.components["VENTIN_TUBINGIN"].r_back=this.insp_valve_resistance,this._model.components["VENTIN_TUBINGIN"].no_backflow=!1,this._model.components["TUBINGOUT_VENTOUT"].r_for=1e7,this._model.components["TUBINGOUT_VENTOUT"].no_backflow=!0}this._expiration&&(this._model.components["VENTIN_TUBINGIN"].r_for=(this._model.components["VENTIN"].pres-this.sensor_p_atm-this.sensor_insp_gas_pressure)/(this.exp_flow/60),this._model.components["VENTIN_TUBINGIN"].r_back=(this._model.components["VENTIN"].pres-this.sensor_insp_gas_pressure)/(this.exp_flow/60),this._model.components["VENTIN_TUBINGIN"].no_backflow=!1,this.setExpiratoryValveResistance())}pressureControl(s){if(this._inspiration){let s=(this._model.components["VENTIN"].pres-this.sensor_p_atm-this.sensor_insp_gas_pressure)/(this.insp_flow/60);if(this.sensor_insp_gas_pressure>this.pip){let s=this.sensor_insp_gas_pressure-this.pip;this.insp_valve_resistance+=this.insp_valve_resistance_stepsize*s}else{let e=this.pip-this.sensor_insp_gas_pressure;this.insp_valve_resistance-=this.insp_valve_resistance_stepsize*e,this.insp_valve_resistance<s&&(this.insp_valve_resistance=s)}this._model.components["VENTIN_TUBINGIN"].r_for=this.insp_valve_resistance,this._model.components["VENTIN_TUBINGIN"].r_back=this.insp_valve_resistance,this._model.components["VENTIN_TUBINGIN"].no_backflow=!1,this._model.components["TUBINGOUT_VENTOUT"].r_for=1e11,this._model.components["TUBINGOUT_VENTOUT"].no_backflow=!0}this._expiration&&(this._model.components["VENTIN_TUBINGIN"].r_for=(this._model.components["VENTIN"].pres-this.sensor_p_atm-this.sensor_insp_gas_pressure)/(this.exp_flow/60),this._model.components["VENTIN_TUBINGIN"].r_back=(this._model.components["VENTIN"].pres-this.sensor_insp_gas_pressure)/(this.exp_flow/60),this._model.components["VENTIN_TUBINGIN"].no_backflow=!1,this._model.components["TUBINGOUT_VENTOUT"].r_for=10,this._model.components["TUBINGOUT_VENTOUT"].no_backflow=!0,this.setExpiratoryValveResistance())}setExpiratoryValveResistance(){let s=this.peep/this._model.components["VENTOUT"].el_min+this._model.components["VENTOUT"].vol_u;this._model.components["VENTOUT"].vol=s,this._model.components["TUBINGOUT_VENTOUT"].r_for=10,this._model.components["TUBINGOUT_VENTOUT"].no_backflow=!0}hfoVentilator(s){this.hfo_map=10,this.hfo_freq=10,this.hfo_amplitude=20,this.hfo_ie_ratio=.5,this.hfo_insp_time=1/this.hfo_freq*.333,this.hfo_exp_time=1/this.hfo_freq*.666,this.hfo_timer_counter>this.hfo_insp_time&!0===this.hfo_inspiration&&(this.hfo_inspiration=!1,this.hfo_expiration=!0,this.hfo_current_freq=1/this.hfo_exp_time,this.hfo_sine_factor=-1,this.hfo_timer_counter=0),this.hfo_timer_counter>this.hfo_exp_time&!0===this.hfo_expiration&&(this.hfo_inspiration=!0,this.hfo_expiration=!1,this.hfo_current_freq=1/this.hfo_insp_time,this.hfo_sine_factor=1,this.hfo_timer_counter=0,this.hfo_tidal_volume=this.hfo_tidal_volume_counter,this.hfo_tidal_volume_counter=0),this.hfo_timer_counter+=this._model.modeling_stepsize,this._model.components["VENTOUT"].vol=this._model.components["VENTOUT"].vol_u+this.hfo_map/(this._model.components["VENTOUT"].el_min*this._model.components["VENTOUT"].el_min_fac),this._model.components["TUBINGOUT_VENTOUT"].r_for=10,this._model.components["TUBINGOUT_VENTOUT"].no_backflow=!0;let e=(960-this._model.components["VENTOUT"].pres)/(this.hfo_bias_flow/60);this._model.components["VENTIN_TUBINGIN"].r_for=e,this._model.components["VENTIN_TUBINGIN"].no_backflow=!0,this.hfo_generated_pressure=this.hfo_amplitude*Math.sin(Math.PI*this.hfo_current_freq*this.hfo_timer_counter)*this.hfo_sine_factor,this._model.components["TUBINGIN"].pres_ext=this.hfo_generated_pressure,this.hfo_expiration&&(this.hfo_tidal_volume_counter+=this._model.components["YPIECE_NCA"].real_flow*this._model.modeling_stepsize)}detectTrigger(){}modelCycle(){this.detectTrigger();let s=this._model.modeling_stepsize,e=this._model.components["metabolism"].p_atm;switch(this.sensor_p_atm=e,this.sensor_insp_gas_pressure=this._model.components["TUBINGIN"].pres-e,this.sensor_exp_gas_pressure=this._model.components["YPIECE"].pres-e,this.sensor_exp_gas_flow=this._model.components["TUBINGOUT_VENTOUT"].real_flow,this.ventilator_mode){case"pressure":this.pressureControlWithExpirationValve();break;case"volume":this.volumeControl(e);break;case"hfov":this.hfoVentilator(e);break}this._inspiration&&(this._inspiratory_tidal_volume_counter+=this._model.components["TUBINGIN_YPIECE"].real_flow*s,this.sensor_insp_gas_pressure>this._peak_pressure_temp&&(this._peak_pressure_temp=this.sensor_insp_gas_pressure),this._insp_counter+=s),this._expiration&&(this._exhaled_tidal_volume_counter+=(this._model.components["YPIECE_TUBINGOUT"].real_flow-this._model.components["TUBINGIN_YPIECE"].real_flow)*s,this._exp_counter+=s),this.pressure=this._model.components["YPIECE"].pres-e,this.flow=this._model.components["YPIECE_NCA"].real_flow,this.volume+=this._model.components["YPIECE_NCA"].real_flow*s,this.measured_freq_counter+=s,"hfov"!==this.ventilator_mode&&this.ventilatorCycling(e)}beginInspiration(s){this.measured_freq=60/this.measured_freq_counter,this.measured_freq_counter=0,this.exhaled_tidal_volume=this._exhaled_tidal_volume_counter,this._exhaled_tidal_volume_counter=0,this.etco2_ventilator=this._model.components["NCA"].pco2,this.minute_volume=this.measured_freq*this.exhaled_tidal_volume,this.volume_garanteed&&this.volumeGarantee(s),this._insp_volume_reached=!1,this._insp_pressure_reached=!1,this._exp_counter=0,this._expiration=!1,this._inspiration=!0,this._trigger_counter=0,this.triggered_breath=!0,this.volume=0}beginExpiration(s){this._insp_counter=0,this._inspiration=!1,this._expiration=!0,this.peak_pressure=this._peak_pressure_temp,this._peak_pressure_temp=-100,this.inspiratory_tidal_volume=this._inspiratory_tidal_volume_counter,this._inspiratory_tidal_volume_counter=0,this.plateau_pressure=this.sensor_insp_gas_pressure,this.compliance_static=1e3*this.exhaled_tidal_volume/(1.35951*(this.plateau_pressure-this.peep)),this.resistance_airway=1.35951*(this.plateau_pressure-this.peep)/(1e3*this.flow),this.time_constant=this.compliance_static*this.resistance_airway,this.triggered_breath=!1}ventilatorCycling(s){switch(this.cycling_mode){case"time":this.timeCycling(s);break;case"flow":this.flowCycling(s);break;case"hfov":this.hfoCycling(s);default:break}}hfoCycling(s){this.pip<0?this.beginExpiration(s):this.beginInspiration(s)}timeCycling(s){this._insp_counter>this.t_in&&this.beginExpiration(s),this._exp_counter>this.t_ex&&this.beginInspiration(s)}flowCycling(s){this._insp_counter>.1&this._model.components["YPIECE_NCA"].real_flow<.001&&(this.t_in=this._insp_counter,this.beginExpiration(s)),this._exp_counter>this.t_ex_backup&this._model.components["YPIECE_NCA"].real_flow>-.001&&(this.t_ex=this._exp_counter,this.beginInspiration(s))}}